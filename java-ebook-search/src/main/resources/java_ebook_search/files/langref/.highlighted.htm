<!DOCTYPE html PUBLIC "-//ORA//DTD CD HTML 3.2//EN">
<html>
 <head> 
  <title>[Chapter 10] Integer</title> 
  <meta name="author" content="Mark Grand"> 
  <meta name="date" content="Fri Aug  8 15:24:51 1997"> 
  <meta name="form" content="html"> 
  <meta name="metadata" content="dublincore.0.1"> 
  <meta name="objecttype" content="book part"> 
  <meta name="otheragent" content="gmat dbtohtml"> 
  <meta name="publisher" content="O'Reilly &amp; Associates, Inc."> 
  <meta name="source" content="SGML"> 
  <meta name="subject" content="java"> 
  <meta name="title" content="Java Language Reference"> 
  <meta http-equiv="Content-Script-Type" content="text/javascript"> 
 </head> 
 <body vlink="#551a8b" alink="#ff0000" text="#000000" bgcolor="#FFFFFF" link="#0000ee"> 
  <div class="htmlnav"> 
   <h1><a href="index.htm"><img src="gifs/smbanner.gif" alt="Java Language Reference" border="0"></a></h1> 
   <table width="515" border="0" cellpadding="0" cellspacing="0"> 
    <tbody>
     <tr> 
      <td width="172" align="left" valign="top"><a href="ch10_09.htm"><img src="gifs/txtpreva.gif" alt="Previous" border="0"></a></td> 
      <td width="171" align="center" valign="top"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 10<br>The java.lang Package</font></b></td> 
      <td width="172" align="right" valign="top"><a href="ch10_11.htm"><img src="gifs/txtnexta.gif" alt="Next" border="0"></a></td> 
     </tr> 
    </tbody>
   </table> &nbsp; 
   <hr align="left" width="515"> 
  </div> 
  <div class="refnamediv"> 
   <h1><mark>Integer</mark></h1> 
   <h2>Name</h2><mark>Integer</mark>
  </div> 
  <div class="refsect1"> 
   <h2 class="refsect1"><a class="TITLE" name="ch10-REFSECT1-AUTOID.72">Synopsis</a></h2> 
   <dl class="variablelist"> 
    <dt class="varlistentry">
     Class Name:
     <br> 
    </dt>
    <dd> 
     <p class="para"> <tt class="literal">java.lang.<mark>Integer</mark></tt> </p>
     <p> </p>
    </dd>
    <dt class="varlistentry">
     Superclass:
     <br> 
    </dt>
    <dd> 
     <p class="para"> <tt class="literal">java.lang.Number</tt> </p>
     <p> </p>
    </dd>
    <dt class="varlistentry">
     Immediate Subclasses:
     <br> 
    </dt>
    <dd> 
     <p class="para"> None </p>
     <p> </p>
    </dd>
    <dt class="varlistentry">
     Interfaces Implemented:
     <br> 
    </dt>
    <dd> 
     <p class="para"> None </p>
     <p> </p>
    </dd>
    <dt class="varlistentry">
     Availability:
     <br> 
    </dt>
    <dd> 
     <p class="para"> JDK 1.0 or later</p>
    </dd>
   </dl> 
  </div> 
  <div class="refsect1"> 
   <h2 class="refsect1"><a class="TITLE" name="ch10-REFSECT1-AUTOID.73">Description</a></h2> 
   <p class="para"> <a name="MAN.INTEGER.1"></a>The <tt class="literal"><mark>Integer</mark></tt> class provides an object wrapper for an <tt class="literal">int</tt> value. This is useful when you need to treat an <tt class="literal">int</tt> value as an object. For example, there are a number of utility methods that take a reference to an <tt class="literal">Object</tt> as one of their arguments. You cannot specify an <tt class="literal">int</tt> value for one of these arguments, but you can provide a reference to an <tt class="literal"><mark>Integer</mark></tt> object that encapsulates the <tt class="literal">int</tt> value. Also, as of JDK 1.1, the <tt class="literal"><mark>Integer</mark></tt> class is necessary to support the Reflection API and class literals. </p>
   <p class="para"> The <tt class="literal"><mark>Integer</mark></tt> class also provides a number of utility methods for converting <tt class="literal">int</tt> values to other primitive types and for converting <tt class="literal">int</tt> values to strings and vice versa. </p>
  </div> 
  <div class="refsect1"> 
   <h2 class="refsect1"><a class="TITLE" name="ch10-REFSECT1-AUTOID.74">Class Summary</a></h2> 
   <div class="screen"> 
    <p> </p>
    <pre>public final class java.lang.<mark>Integer</mark> extends java.lang.Number {
    // Constants
    public static final int MAX_VALUE;
    public static final int MIN_VALUE;
    public final static Class TYPE;                    // New in 1.1
    // Constructors
    public <mark>Integer</mark>(int value);
    public <mark>Integer</mark>(String s);
    // Class Methods
    public static <mark>Integer</mark> decode(String nm)            // New in 1.1
    public static <mark>Integer</mark> getInteger(String nm);
    public static <mark>Integer</mark> getInteger(String nm, int val);
    public static <mark>Integer</mark> getInteger(String nm, <mark>Integer</mark> val);
    public static int parseInt(String s);
    public static int parseInt(String s, int radix;
    public static String toBinaryString(long i);
    public static String toHexString(long i);
    public static String toOctalString(long i);
    public static String toString(int i);
    public static String toString(int i, int radix);
    public static <mark>Integer</mark> valueOf(String s);
    public static <mark>Integer</mark> valueOf(String s, int radix);
    // Instance Methods
    public byte byteValue();                           // New in 1.1
    public double doubleValue();
    public boolean equals(Object obj);
    public float floatValue();
    public int hashCode();
    public int intValue();
    public long longValue();
    public short shortValue();                         // New in 1.1
    public String toString();
}</pre> 
   </div> 
  </div> 
  <div class="refsect1"> 
   <h2 class="refsect1"><a class="TITLE" name="ch10-REFSECT1-AUTOID.75">Constants</a></h2> 
   <div class="refsect2"> 
    <h3 class="refsect2"><a class="TITLE" name="ch10-REFSECT2-AUTOID.188">MAX_VALUE</a></h3> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.196"><tt class="literal">public static final int MAX_VALUE = 0x7fffffff // 2147483647</tt></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> The largest value that can be represented by an <tt class="literal">int</tt>.</p>
      </dd>
     </dl> 
    </div> 
   </div> 
   <div class="refsect2"> 
    <h3 class="refsect2"><a class="TITLE" name="ch10-REFSECT2-AUTOID.189">MIN_VALUE</a></h3> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.197"><tt class="literal">public static final int MIN_VALUE = 0x80000000 // -2147483648</tt></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> The smallest value that can be represented by an <tt class="literal">int</tt>.</p>
      </dd>
     </dl> 
    </div> 
   </div> 
   <div class="refsect2"> 
    <h3 class="refsect2"><a class="TITLE" name="ch10-REFSECT2-AUTOID.190">TYPE</a></h3> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.198"><tt class="literal">public static final Class TYPE </tt></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Availability
       <br> 
      </dt>
      <dd> 
       <p class="para"> New as of JDK 1.1 </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> The <tt class="literal">Class</tt> object that represents the type <tt class="literal">int</tt>. It is always true that <tt class="literal"><mark>Integer</mark>.TYPE</tt> <tt class="literal">==</tt> <tt class="literal">int.class</tt>.</p>
      </dd>
     </dl> 
    </div> 
   </div> 
  </div> 
  <div class="refsect1"> 
   <h2 class="refsect1"><a class="TITLE" name="ch10-REFSECT1-AUTOID.76">Constructors</a></h2> 
   <div class="refsect2"> 
    <h3 class="refsect2"><a class="TITLE" name="ch10-REFSECT2-AUTOID.191"><mark>Integer</mark></a></h3> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.199"><tt class="literal">public <mark>Integer</mark>(int value)</tt></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Parameters
       <br> 
      </dt>
      <dd> 
       <p> </p>
       <dl class="variablelist"> 
        <dt class="varlistentry">
         <tt class="literal">value</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> The <tt class="literal">int</tt> value to be encapsulated by this object.</p>
        </dd>
       </dl> 
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> Creates an <tt class="literal"><mark>Integer</mark></tt> object with the specified <tt class="literal">int</tt> value.</p>
      </dd>
     </dl> 
    </div> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.200"><tt class="literal">public <mark>Integer</mark>(String s) throws NumberFormatException</tt></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Parameters
       <br> 
      </dt>
      <dd> 
       <p> </p>
       <dl class="variablelist"> 
        <dt class="varlistentry">
         <tt class="literal">s</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> The string to be made into an <tt class="literal"><mark>Integer</mark></tt> object.</p>
        </dd>
       </dl> 
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Throws
       <br> 
      </dt>
      <dd> 
       <p> </p>
       <dl class="variablelist"> 
        <dt class="varlistentry">
         <tt class="literal">NumberFormatException</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> If the sequence of characters in the given <tt class="literal">String</tt> does not form a valid <tt class="literal">int</tt> literal.</p>
        </dd>
       </dl> 
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> Constructs an <tt class="literal"><mark>Integer</mark></tt> object with the value specified by the given string. The string should consist of one or more digit characters. The digit characters can be preceded by a single `<tt class="literal">-</tt>' character. If the string contains any other characters, the constructor throws a <tt class="literal">NumberFormatException</tt>.</p>
      </dd>
     </dl> 
    </div> 
   </div> 
  </div> 
  <div class="refsect1"> 
   <h2 class="refsect1"><a class="TITLE" name="ch10-REFSECT1-AUTOID.77">Class Methods</a></h2> 
   <div class="refsect2"> 
    <h3 class="refsect2"><a class="TITLE" name="ch10-REFSECT2-AUTOID.192">decode</a></h3> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.201"><tt class="literal">public static <mark>Integer</mark> decode(String nm)</tt></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Availability
       <br> 
      </dt>
      <dd> 
       <p class="para"> New as of JDK 1.1 </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Parameters
       <br> 
      </dt>
      <dd> 
       <p> </p>
       <dl class="variablelist"> 
        <dt class="varlistentry">
         <tt class="literal">nm</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> A <tt class="literal">String</tt> representation of the value to be encapsulated by an <tt class="literal"><mark>Integer</mark></tt> object. If the string begins with <tt class="literal">#</tt> or <tt class="literal">0x</tt>, it is a radix 16 representation of the value. If the string begins with <tt class="literal">0</tt>, it is a radix 8 representation of the value. Otherwise, it is assumed to be a radix 10 representation of the value.</p>
        </dd>
       </dl> 
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Returns
       <br> 
      </dt>
      <dd> 
       <p class="para"> An <tt class="literal"><mark>Integer</mark></tt> object that encapsulates the given value. </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Throws
       <br> 
      </dt>
      <dd> 
       <p> </p>
       <dl class="variablelist"> 
        <dt class="varlistentry">
         <tt class="literal">NumberFormatException</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> If the <tt class="literal">String</tt> contains any nondigit characters other than a leading minus sign or the value represented by the <tt class="literal">String</tt> is less than <tt class="literal"><mark>Integer</mark>.MIN_VALUE</tt> or greater than <tt class="literal"><mark>Integer</mark>.MAX_VALUE</tt>.</p>
        </dd>
       </dl> 
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> This method returns an <tt class="literal"><mark>Integer</mark></tt> object that encapsulates the given value.</p>
      </dd>
     </dl> 
    </div> 
   </div> 
   <div class="refsect2"> 
    <h3 class="refsect2"><a class="TITLE" name="ch10-REFSECT2-AUTOID.193">getInteger</a></h3> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.202"><tt class="literal">public static <mark>Integer</mark> getInteger(String nm)</tt></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Parameters
       <br> 
      </dt>
      <dd> 
       <p> </p>
       <dl class="variablelist"> 
        <dt class="varlistentry">
         <tt class="literal">nm</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> The name of a system property.</p>
        </dd>
       </dl> 
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Returns
       <br> 
      </dt>
      <dd> 
       <p class="para"> The value of the system property as an <tt class="literal"><mark>Integer</mark></tt> object, or an <tt class="literal"><mark>Integer</mark></tt> object with the value 0 if the named property does not exist or cannot be parsed. </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> This method retrieves the value of the named system property and returns it as an <tt class="literal"><mark>Integer</mark></tt> object. The method obtains the value of the system property as a <tt class="literal">String</tt> using <tt class="literal">System.getProperty()</tt>. </p>
       <p class="para"> If the value of the property begins with <tt class="literal">0x</tt> or <tt class="literal">#</tt>and is not followed by a minus sign, the
rest of the value is parsed as a hexadecimal <mark>integer</mark>. If the value
begins with<tt class="literal">0</tt>, it's parsed as an octal <mark>integer</mark>;
otherwise it's parsed as a decimal <mark>integer</mark>.</p>
      </dd>
     </dl> 
    </div> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.203"><tt class="literal">public static <mark>Integer</mark> getInteger(String nm, int val)</tt></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Parameters
       <br> 
      </dt>
      <dd> 
       <p> </p>
       <dl class="variablelist"> 
        <dt class="varlistentry">
         <tt class="literal">nm</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> The name of a system property. </p>
         <p> </p>
        </dd>
        <dt class="varlistentry">
         <tt class="literal">val</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> A default <tt class="literal">int</tt> value for the property.</p>
        </dd>
       </dl> 
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Returns
       <br> 
      </dt>
      <dd> 
       <p class="para"> The value of the system property as an <tt class="literal"><mark>Integer</mark></tt> object, or an <tt class="literal"><mark>Integer</mark></tt> object with the value <tt class="literal">val</tt> if the named property does not exist or cannot be parsed. </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> This method retrieves the value of the named system property and returns it as an <tt class="literal"><mark>Integer</mark></tt> object. The method obtains the value of the system property as a <tt class="literal">String</tt> using <tt class="literal">System.getProperty()</tt>. </p>
       <p class="para"> If the value of the property begins with <tt class="literal">0x</tt> or <tt class="literal">#</tt>and is not followed by a minus sign, the
rest of the value is parsed as a hexadecimal <mark>integer</mark>. If the value
begins with<tt class="literal">0</tt>, it's parsed as an octal <mark>integer</mark>;
otherwise it's parsed as a decimal <mark>integer</mark>.</p>
      </dd>
     </dl> 
    </div> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.204"><tt class="literal">public static <mark>Integer</mark> getInteger(String nm, <mark>Integer</mark> val)</tt></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Parameters
       <br> 
      </dt>
      <dd> 
       <p> </p>
       <dl class="variablelist"> 
        <dt class="varlistentry">
         <tt class="literal">nm</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> The name of a system property. </p>
         <p> </p>
        </dd>
        <dt class="varlistentry">
         <tt class="literal">val</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> A default <tt class="literal"><mark>Integer</mark></tt> value for the property.</p>
        </dd>
       </dl> 
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Returns
       <br> 
      </dt>
      <dd> 
       <p class="para"> The value of the system property as an <tt class="literal"><mark>Integer</mark></tt> object, or the <tt class="literal"><mark>Integer</mark></tt> object <tt class="literal">val</tt> if the named property does not exist or cannot be parsed. </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> This method retrieves the value of the named system property and returns it as an <tt class="literal"><mark>Integer</mark></tt> object. The method obtains the value of the system property as a <tt class="literal">String</tt> using <tt class="literal">System.getProperty()</tt>. </p>
       <p class="para"> If the value of the property begins with <tt class="literal">0x</tt> or <tt class="literal">#</tt>and is not followed by a minus sign, the
rest of the value is parsed as a hexadecimal <mark>integer</mark>. If the value
begins with<tt class="literal">0</tt>, it's parsed as an octal <mark>integer</mark>;
otherwise it's as a decimal <mark>integer</mark>.</p>
      </dd>
     </dl> 
    </div> 
   </div> 
   <div class="refsect2"> 
    <h3 class="refsect2"><a class="TITLE" name="ch10-REFSECT2-AUTOID.194">parseInt</a></h3> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.205">
       <div class="screen"> 
        <p> </p>
        <pre> public static int parseInt(String s) throws NumberFormatException </pre> 
       </div></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Parameters
       <br> 
      </dt>
      <dd> 
       <p> </p>
       <dl class="variablelist"> 
        <dt class="varlistentry">
         <tt class="literal">s</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> The <tt class="literal">String</tt> to be converted to an <tt class="literal">int</tt> value.</p>
        </dd>
       </dl> 
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Returns
       <br> 
      </dt>
      <dd> 
       <p class="para">The numeric value of the <mark>integer</mark> represented by the<tt class="literal">String</tt> object. </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Throws
       <br> 
      </dt>
      <dd> 
       <p> </p>
       <dl class="variablelist"> 
        <dt class="varlistentry">
         <tt class="literal">NumberFormatException</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> If the <tt class="literal">String</tt>does not contain
a valid representation of an <mark>integer</mark>.</p>
        </dd>
       </dl> 
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para">This method returns the numeric value of the <mark>integer</mark> represented
by the contents of the given<tt class="literal">String</tt> object. The <tt class="literal">String</tt> must contain only decimal digits, except that the first character may be a minus sign.</p>
      </dd>
     </dl> 
    </div> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.206">
       <div class="screen"> 
        <p> </p>
        <pre> public static int parseInt(String s, int radix) throws NumberFormatException </pre> 
       </div></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Parameters
       <br> 
      </dt>
      <dd> 
       <p> </p>
       <dl class="variablelist"> 
        <dt class="varlistentry">
         <tt class="literal">s</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> The <tt class="literal">String</tt> to be converted to an <tt class="literal">int</tt> value. </p>
         <p> </p>
        </dd>
        <dt class="varlistentry">
         <tt class="literal">radix</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> The radix used in interpreting the characters in the <tt class="literal">String</tt> as digits. This value must be in the range <tt class="literal">Character.MIN_RADIX</tt> to <tt class="literal">Character.MAX_RADIX</tt>. If <tt class="literal">radix</tt> is in the range 2 through 10, only characters for which the <tt class="literal">Character.isDigit()</tt> method returns <tt class="literal">true</tt> are considered to be valid digits. If <tt class="literal">radix</tt> is in the range 11 through 36, characters in the ranges `A' through `Z' and `a' through `z' may be considered valid digits.</p>
        </dd>
       </dl> 
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Returns
       <br> 
      </dt>
      <dd> 
       <p class="para">The numeric value of the <mark>integer</mark> represented by the<tt class="literal">String</tt> object in the specified radix. </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Throws
       <br> 
      </dt>
      <dd> 
       <p> </p>
       <dl class="variablelist"> 
        <dt class="varlistentry">
         <tt class="literal">NumberFormatException</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> If the <tt class="literal">String</tt>does not contain
a valid representation of an <mark>integer</mark>, or<tt class="literal">radix</tt> is not in the appropriate range.</p>
        </dd>
       </dl> 
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para">This method returns the numeric value of the <mark>integer</mark> represented
by the contents of the given<tt class="literal">String</tt> object in the specified radix. The <tt class="literal">String</tt> must contain only valid digits of the specified radix, except that the first character may be a minus sign. The digits are parsed in the specified radix to produce the numeric value.</p>
      </dd>
     </dl> 
    </div> 
   </div> 
   <div class="refsect2"> 
    <h3 class="refsect2"><a class="TITLE" name="ch10-REFSECT2-AUTOID.195">toBinaryString</a></h3> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.207"><tt class="literal">public static String toBinaryString(int value)</tt></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Parameters
       <br> 
      </dt>
      <dd> 
       <p> </p>
       <dl class="variablelist"> 
        <dt class="varlistentry">
         <tt class="literal">value</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> The <tt class="literal">int</tt> value to be converted to a string.</p>
        </dd>
       </dl> 
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Returns
       <br> 
      </dt>
      <dd> 
       <p class="para"> A string that contains the binary representation of the given value. </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> This method returns a <tt class="literal">String</tt> object that contains the representation of the given value as an unsigned binary number. To convert the given value to an unsigned quantity, the method simply uses the value as if it were not negative. In other words, if the given value is negative, the method adds 2^32 to it. Otherwise the value is used as it is. </p>
       <p class="para"> The string returned by this method contains a sequence of one or more `0' and `1' characters. The method returns "0" if its argument is <tt class="literal">0</tt>. Otherwise, the string returned by this method begins with `1'.</p>
      </dd>
     </dl> 
    </div> 
   </div> 
   <div class="refsect2"> 
    <h3 class="refsect2"><a class="TITLE" name="ch10-REFSECT2-AUTOID.196">toHexString</a></h3> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.208"><tt class="literal">public static String toHexString(int value)</tt></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Parameters
       <br> 
      </dt>
      <dd> 
       <p> </p>
       <dl class="variablelist"> 
        <dt class="varlistentry">
         <tt class="literal">value</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> The <tt class="literal">int</tt> value to be converted to a string.</p>
        </dd>
       </dl> 
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Returns
       <br> 
      </dt>
      <dd> 
       <p class="para"> A string that contains the hexadecimal representation of the given value. </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> This method returns a <tt class="literal">String</tt> object that contains the representation of the given value as an unsigned hexadecimal number. To convert the given value to an unsigned quantity, the method simply uses the value as if it were not negative. In other words, if the given value is negative, the method adds 2^32 to it. Otherwise the value is used as it is. </p>
       <p class="para"> The string returned by this method contains a sequence of one or more of the characters `0', `1', `2', `3', `4', `5', `6', `7', `8', `9', `a', `b', `c', `d', `e', and `f'. The method returns "0" if its argument is <tt class="literal">0</tt>. Otherwise, the string returned by this method does not begin with `0'. </p>
       <p class="para"> To produce a string that contains upper- instead of lowercase letters, use the <tt class="literal">String.toUpperCase()</tt> method.</p>
      </dd>
     </dl> 
    </div> 
   </div> 
   <div class="refsect2"> 
    <h3 class="refsect2"><a class="TITLE" name="ch10-REFSECT2-AUTOID.197">toOctalString</a></h3> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.209"><tt class="literal">public static String toOctalString(int value)</tt></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Parameters
       <br> 
      </dt>
      <dd> 
       <p> </p>
       <dl class="variablelist"> 
        <dt class="varlistentry">
         <tt class="literal">value</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> The <tt class="literal">int</tt> value to be converted to a string.</p>
        </dd>
       </dl> 
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Returns
       <br> 
      </dt>
      <dd> 
       <p class="para"> A string that contains the octal representation of the given value. </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> This method returns a <tt class="literal">String</tt> object that contains a representation of the given value as an unsigned octal number. To convert the given value to an unsigned quantity, the method simply uses the value as if it were not negative. In other words, if the given value is negative, the method adds 2^32 to it. Otherwise the value is used as it is. </p>
       <p class="para"> The string returned by this method contains a sequence of one or more of the characters `0', `1', `2', `3', `4', `5', `6', and `7'. The method returns "0" if its argument is <tt class="literal">0</tt>. Otherwise, the string returned by this method does not begin with `0'.</p>
      </dd>
     </dl> 
    </div> 
   </div> 
   <div class="refsect2"> 
    <h3 class="refsect2"><a class="TITLE" name="ch10-REFSECT2-AUTOID.198">toString</a></h3> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.210"><tt class="literal">public static String toString(int i)</tt></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Parameters
       <br> 
      </dt>
      <dd> 
       <p> </p>
       <dl class="variablelist"> 
        <dt class="varlistentry">
         <tt class="literal">i</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> The <tt class="literal">int</tt> value to be converted to a string.</p>
        </dd>
       </dl> 
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Returns
       <br> 
      </dt>
      <dd> 
       <p class="para"> The string representation of the given value. </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> This method returns a <tt class="literal">String</tt> object that contains the decimal representation of the given value. </p>
       <p class="para"> This method returns a string that begins with `<tt class="literal">-</tt>' if the given value is negative. The rest of the string is a sequence of one or more of the characters `0', `1', `2', `3', `4', `5', `6', `7', `8', and `9'. This method returns "0" if its argument is <tt class="literal">0</tt>. Otherwise, the string returned by this method does not begin with "0" or "<tt class="literal">-</tt>0".</p>
      </dd>
     </dl> 
    </div> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.211"><tt class="literal">public static String toString(int i, int radix)</tt></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Parameters
       <br> 
      </dt>
      <dd> 
       <p> </p>
       <dl class="variablelist"> 
        <dt class="varlistentry">
         <tt class="literal">i</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> The <tt class="literal">int</tt> value to be converted to a string. </p>
         <p> </p>
        </dd>
        <dt class="varlistentry">
         <tt class="literal">radix</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> The radix used in converting the value to a string. This value must be in the range <tt class="literal">Character.MIN_RADIX</tt> to <tt class="literal">Character.MAX_RADIX</tt>.</p>
        </dd>
       </dl> 
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Returns
       <br> 
      </dt>
      <dd> 
       <p class="para"> The string representation of the given value in the specified radix. </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> This method returns a <tt class="literal">String</tt> object that contains the representation of the given value in the specified radix. </p>
       <p class="para"> This method returns a string that begins with `<tt class="literal">-</tt>' if the given value is negative. The rest of the string is a sequence of one or more characters that represent the magnitude of the given value. The characters that can appear in the sequence are determined by the value of <tt class="literal">radix</tt>. If <i class="emphasis">N</i> is the value of <tt class="literal">radix</tt>, the first <i class="emphasis">N</i> characters on the following line can appear in the sequence: </p>
       <div class="screen"> 
        <p> </p>
        <pre>
0123456789abcdefghijklmnopqrstuvwxyz
</pre> 
       </div> 
       <p class="para"> The method does not verify that <tt class="literal">radix</tt> is in the proper range. If <tt class="literal">radix</tt> is less than <tt class="literal">Character.MIN_RADIX</tt> or greater than <tt class="literal">Character.MAX_RADIX</tt>, the value 10 is used instead of the given value. </p>
       <p class="para"> This method returns "0" if its argument is <tt class="literal">0</tt>. Otherwise, the string returned by this method does not begin with "0" or "<tt class="literal">-</tt>0".</p>
      </dd>
     </dl> 
    </div> 
   </div> 
   <div class="refsect2"> 
    <h3 class="refsect2"><a class="TITLE" name="ch10-REFSECT2-AUTOID.199">valueOf</a></h3> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.212">
       <div class="screen"> 
        <p> </p>
        <pre>public static <mark>Integer</mark> valueOf(String s) throws NumberFormatException</pre> 
       </div></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Parameters
       <br> 
      </dt>
      <dd> 
       <p> </p>
       <dl class="variablelist"> 
        <dt class="varlistentry">
         <tt class="literal">s</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> The string to be made into an <tt class="literal"><mark>Integer</mark></tt> object.</p>
        </dd>
       </dl> 
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Returns
       <br> 
      </dt>
      <dd> 
       <p class="para"> The <tt class="literal"><mark>Integer</mark></tt> object constructed from the string. </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Throws
       <br> 
      </dt>
      <dd> 
       <p> </p>
       <dl class="variablelist"> 
        <dt class="varlistentry">
         <tt class="literal">NumberFormatException</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> If the <tt class="literal">String</tt>does not contain
a valid representation of an <mark>integer</mark>.</p>
        </dd>
       </dl> 
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> Constructs an <tt class="literal"><mark>Integer</mark></tt> object with the value specified by the given string. The string should consist of one or more digit characters. The digit characters can be preceded by a single `<tt class="literal">-</tt>' character. If the string contains any other characters, the method throws a <tt class="literal">NumberFormatException</tt>.</p>
      </dd>
     </dl> 
    </div> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.213">
       <div class="screen"> 
        <p> </p>
        <pre>public static <mark>Integer</mark> valueOf(String s, int radix) throws NumberFormatException</pre> 
       </div></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Parameters
       <br> 
      </dt>
      <dd> 
       <p> </p>
       <dl class="variablelist"> 
        <dt class="varlistentry">
         <tt class="literal">s</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> The string to be made into an <tt class="literal"><mark>Integer</mark></tt> object. </p>
         <p> </p>
        </dd>
        <dt class="varlistentry">
         <tt class="literal">radix</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> The radix used in converting the string to a value. This value must be in the range <tt class="literal">Character.MIN_RADIX</tt> to <tt class="literal">Character.MAX_RADIX</tt>.</p>
        </dd>
       </dl> 
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Returns
       <br> 
      </dt>
      <dd> 
       <p class="para"> The <tt class="literal"><mark>Integer</mark></tt> object constructed from the string. </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Throws
       <br> 
      </dt>
      <dd> 
       <p> </p>
       <dl class="variablelist"> 
        <dt class="varlistentry">
         <tt class="literal">NumberFormatException</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> If the <tt class="literal">String</tt>does not contain
a valid representation of an <mark>integer</mark> or<tt class="literal">radix</tt> is not in the appropriate range.</p>
        </dd>
       </dl> 
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> Constructs an <tt class="literal"><mark>Integer</mark></tt> object with the value specified by the given string in the specified radix. The string should consist of one or more digit characters or characters in the range `A' to `Z' or `a' to `z' that are considered digits in the given radix. The digit characters can be preceded by a single `<tt class="literal">-</tt>' character. If the string contains any other characters, the method throws a <tt class="literal">NumberFormatException</tt>.</p>
      </dd>
     </dl> 
    </div> 
   </div> 
  </div> 
  <div class="refsect1"> 
   <h2 class="refsect1"><a class="TITLE" name="ch10-REFSECT1-AUTOID.78">Instance Methods</a></h2> 
   <div class="refsect2"> 
    <h3 class="refsect2"><a class="TITLE" name="ch10-REFSECT2-AUTOID.200">byteValue</a></h3> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.214"><tt class="literal">public byte byteValue()</tt></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Availability
       <br> 
      </dt>
      <dd> 
       <p class="para"> New as of JDK 1.1 </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Returns
       <br> 
      </dt>
      <dd> 
       <p class="para"> The value of this object as a <tt class="literal">byte</tt>. </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Overrides
       <br> 
      </dt>
      <dd> 
       <p class="para"> <tt class="literal">Number.byteValue()</tt> </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> This method returns the value of this object as a <tt class="literal">byte</tt>. The high order bits of the value are discarded.</p>
      </dd>
     </dl> 
    </div> 
   </div> 
   <div class="refsect2"> 
    <h3 class="refsect2"><a class="TITLE" name="ch10-REFSECT2-AUTOID.201">doubleValue</a></h3> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.215"><tt class="literal">public double doubleValue()</tt></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Returns
       <br> 
      </dt>
      <dd> 
       <p class="para"> The value of this object as a <tt class="literal">double</tt>. </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Overrides
       <br> 
      </dt>
      <dd> 
       <p class="para"> <tt class="literal">Number.doubleValue()</tt> </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> This method returns the value of this object as a <tt class="literal">double</tt>.</p>
      </dd>
     </dl> 
    </div> 
   </div> 
   <div class="refsect2"> 
    <h3 class="refsect2"><a class="TITLE" name="ch10-REFSECT2-AUTOID.202">equals</a></h3> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.216"><tt class="literal">public boolean equals(Object obj)</tt></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Parameters
       <br> 
      </dt>
      <dd> 
       <p> </p>
       <dl class="variablelist"> 
        <dt class="varlistentry">
         <tt class="literal">obj</tt>
         <br> 
        </dt>
        <dd> 
         <p class="para"> The object to be compared with this object.</p>
        </dd>
       </dl> 
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Returns
       <br> 
      </dt>
      <dd> 
       <p class="para"> <tt class="literal">true</tt> if the objects are equal; <tt class="literal">false</tt> if they are not. </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Overrides
       <br> 
      </dt>
      <dd> 
       <p class="para"> <tt class="literal">Object.equals()</tt> </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> This method returns <tt class="literal">true</tt> if <tt class="literal">obj</tt> is an instance of <tt class="literal"><mark>Integer</mark></tt> and it contains the same value as the object this method is associated with.</p>
      </dd>
     </dl> 
    </div> 
   </div> 
   <div class="refsect2"> 
    <h3 class="refsect2"><a class="TITLE" name="ch10-REFSECT2-AUTOID.203">floatValue</a></h3> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.217"><tt class="literal">public float floatValue()</tt></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Returns
       <br> 
      </dt>
      <dd> 
       <p class="para"> The value of this object as a <tt class="literal">float</tt>. </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Overrides
       <br> 
      </dt>
      <dd> 
       <p class="para"> <tt class="literal">Number.floatValue()</tt> </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> This method returns the value of this object as a <tt class="literal">float</tt>. Rounding may occur.</p>
      </dd>
     </dl> 
    </div> 
   </div> 
   <div class="refsect2"> 
    <h3 class="refsect2"><a class="TITLE" name="ch10-REFSECT2-AUTOID.204">hashCode</a></h3> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.218"><tt class="literal">public int hashCode()</tt></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Returns
       <br> 
      </dt>
      <dd> 
       <p class="para"> A hashcode based on the <tt class="literal">int</tt> value of the object. </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Overrides
       <br> 
      </dt>
      <dd> 
       <p class="para"> <tt class="literal">Object.hashCode()</tt> </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> This method returns a hashcode computed from the value of this object.</p>
      </dd>
     </dl> 
    </div> 
   </div> 
   <div class="refsect2"> 
    <h3 class="refsect2"><a class="TITLE" name="ch10-REFSECT2-AUTOID.205">intValue</a></h3> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.219"><tt class="literal">public int intValue()</tt></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Returns
       <br> 
      </dt>
      <dd> 
       <p class="para"> The value of this object as an <tt class="literal">int</tt>. </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Overrides
       <br> 
      </dt>
      <dd> 
       <p class="para"> <tt class="literal">Number.intValue()</tt> </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> This method returns the value of this object as an <tt class="literal">int</tt>.</p>
      </dd>
     </dl> 
    </div> 
   </div> 
   <div class="refsect2"> 
    <h3 class="refsect2"><a class="TITLE" name="ch10-REFSECT2-AUTOID.206">longValue</a></h3> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.220"><tt class="literal">public long longValue()</tt></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Returns
       <br> 
      </dt>
      <dd> 
       <p class="para"> The value of this object as a <tt class="literal">long</tt>. </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Overrides
       <br> 
      </dt>
      <dd> 
       <p class="para"> <tt class="literal">Number.longValue()</tt> </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> This method returns the value of this object as a <tt class="literal">long</tt>.</p>
      </dd>
     </dl> 
    </div> 
   </div> 
   <div class="refsect2"> 
    <h3 class="refsect2"><a class="TITLE" name="ch10-REFSECT2-AUTOID.207">shortValue</a></h3> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.221"><tt class="literal">public short shortValue()</tt></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Availability
       <br> 
      </dt>
      <dd> 
       <p class="para"> New as of JDK 1.1 </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Returns
       <br> 
      </dt>
      <dd> 
       <p class="para"> The value of this object as a <tt class="literal">short</tt>. </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Overrides
       <br> 
      </dt>
      <dd> 
       <p class="para"> <tt class="literal">Number.shortValue()</tt> </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> This method returns the value of this object as a <tt class="literal">short</tt>. The high order bits of the value are discarded.</p>
      </dd>
     </dl> 
    </div> 
   </div> 
   <div class="refsect2"> 
    <h3 class="refsect2"><a class="TITLE" name="ch10-REFSECT2-AUTOID.208">toString</a></h3> 
    <div class="refsect3"> 
     <h4 class="refsect3"><a class="TITLE" name="ch10-REFSECT3-AUTOID.222"><tt class="literal">public String toString()</tt></a></h4> 
     <dl class="variablelist"> 
      <dt class="varlistentry">
       Returns
       <br> 
      </dt>
      <dd> 
       <p class="para"> The string representation of the value of this object. </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Overrides
       <br> 
      </dt>
      <dd> 
       <p class="para"> <tt class="literal">Object.toString()</tt> </p>
       <p> </p>
      </dd>
      <dt class="varlistentry">
       Description
       <br> 
      </dt>
      <dd> 
       <p class="para"> This method returns a <tt class="literal">String</tt> object that contains the decimal representation of the value of this object. </p>
       <p class="para"> This method returns a string that begins with `<tt class="literal">-</tt>' if the value is negative. The rest of the string is a sequence of one or more of the characters `0', `1', `2', `3', `4', `5', `6', `7', `8', and `9'. This method returns "0" if the value of the object is <tt class="literal">0</tt>. Otherwise, the string returned by this method does not begin with "0" or "<tt class="literal">-</tt>0".</p>
      </dd>
     </dl> 
    </div> 
   </div> 
  </div> 
  <div class="refsect1"> 
   <h2 class="refsect1"><a class="TITLE" name="ch10-REFSECT1-AUTOID.79">Inherited Methods</a></h2> 
   <div class="informaltable"> 
    <p> </p>
    <table class="INFORMALTABLE"> 
     <tbody>
      <tr class="row"> 
       <th align="left"> <p class="para"> Method</p></th> 
       <th align="left"> <p class="para"> Inherited From</p></th> 
       <th align="left"> <p class="para"> Method</p></th> 
       <th align="left"> <p class="para"> Inherited From</p></th> 
      </tr> 
      <tr class="row"> 
       <td align="left"> <p class="para"> <tt class="literal">clone()</tt></p></td> 
       <td align="left"> <p class="para"> <tt class="literal">Object</tt></p></td> 
       <td align="left"> <p class="para"> <tt class="literal">finalize()</tt></p></td> 
       <td align="left"> <p class="para"> <tt class="literal">Object</tt></p></td> 
      </tr> 
      <tr class="row"> 
       <td align="left"> <p class="para"> <tt class="literal">getClass()</tt></p></td> 
       <td align="left"> <p class="para"> <tt class="literal">Object</tt></p></td> 
       <td align="left"> <p class="para"> <tt class="literal">notify()</tt></p></td> 
       <td align="left"> <p class="para"> <tt class="literal">Object</tt></p></td> 
      </tr> 
      <tr class="row"> 
       <td align="left"> <p class="para"> <tt class="literal">notifyAll()</tt></p></td> 
       <td align="left"> <p class="para"> <tt class="literal">Object</tt></p></td> 
       <td align="left"> <p class="para"> <tt class="literal">wait()</tt></p></td> 
       <td align="left"> <p class="para"> <tt class="literal">Object</tt></p></td> 
      </tr> 
      <tr class="row"> 
       <td align="left"> <p class="para"> <tt class="literal">wait(long)</tt></p></td> 
       <td align="left"> <p class="para"> <tt class="literal">Object</tt></p></td> 
       <td align="left"> <p class="para"> <tt class="literal">wait(long, int)</tt></p></td> 
       <td align="left"> <p class="para"> <tt class="literal">Object</tt></p></td> 
      </tr> 
     </tbody>
    </table> 
    <p> </p>
   </div> 
  </div> 
  <div class="refsect1"> 
   <h2 class="refsect1"><a class="TITLE" name="ch10-REFSECT1-AUTOID.80">See Also</a></h2> 
   <p class="para"> <a href="ch10_03.htm">Character</a>; <a href="ch10_04.htm">Class</a>; <a href="ch09_04.htm#JLR2-CH-9-SECT-4.1">Exceptions</a>; <a href="ch02_02.htm#JLR2-CH-2-SECT-2.3.1"><mark>Integer</mark> literals</a>; <a href="ch03_01.htm#JLR2-CH-3-SECT-1.1.1"><mark>Integer</mark> types</a>; <a href="ch10_11.htm">Long</a>; <a href="ch10_13.htm">Number</a>; <a href="ch10_20.htm">String</a>; <a href="ch10_22.htm">System</a> </p>
  </div> 
  <div class="htmlnav"> 
   <p> </p>
   <hr align="left" width="515"> 
   <table width="515" border="0" cellpadding="0" cellspacing="0"> 
    <tbody>
     <tr> 
      <td width="172" align="left" valign="top"><a href="ch10_09.htm"><img src="gifs/txtpreva.gif" alt="Previous" border="0"></a></td> 
      <td width="171" align="center" valign="top"><a href="index.htm"><img src="gifs/txthome.gif" border="0" alt="Home"></a></td> 
      <td width="172" align="right" valign="top"><a href="ch10_11.htm"><img src="gifs/txtnexta.gif" alt="Next" border="0"></a></td> 
     </tr> 
     <tr> 
      <td width="172" align="left" valign="top">Float</td> 
      <td width="171" align="center" valign="top"><a href="index/idx_0.htm"><img src="gifs/index.gif" alt="Book Index" border="0"></a></td> 
      <td width="172" align="right" valign="top">Long</td> 
     </tr> 
    </tbody>
   </table> 
   <hr align="left" width="515"> 
   <img src="gifs/smnavbar.gif" usemap="#map" border="0"> 
   <map name="map"> <area shape="RECT" coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> <area shape="RECT" coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> <area shape="RECT" coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> <area shape="RECT" coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> <area shape="RECT" coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> </map> 
  </div>   
 </body>
</html>